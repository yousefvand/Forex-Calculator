name: Build and Release Static Binaries

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies (Linux)
      run: |
        sudo apt update
        sudo apt install -y ninja-build build-essential libgl1-mesa-dev libglu1-mesa-dev rsync \
        qt6-base-dev qt6-tools-dev-tools qt6-l10n-tools

    - name: Configure CMake (Linux)
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -S .

    - name: Build Forex-Calculator (Linux)
      run: cmake --build build --config Release

    - name: Package Forex-Calculator (Linux)
      run: |
        mkdir -p artifacts
        tar -czvf artifacts/Forex-Calculator_linux.tar.gz -C build .

    - name: Upload Artifact (Linux)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_linux
        path: artifacts/Forex-Calculator_linux.tar.gz


  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies (macOS)
      run: brew install ninja qt

    - name: Configure CMake (macOS)
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -S .

    - name: Build Forex-Calculator (macOS)
      run: cmake --build build --config Release

    - name: Package Forex-Calculator (macOS)
      run: |
        mkdir -p artifacts
        zip -r artifacts/Forex-Calculator_macos.zip build

    - name: Upload Artifact (macOS)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_macos
        path: artifacts/Forex-Calculator_macos.zip


  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Install Dependencies (Windows)
      run: |
        choco install ninja cmake mingw
      shell: cmd

    - name: Install Qt (Windows)
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'
        static: true

    - name: Configure CMake (Windows)
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release ^
          -G Ninja ^
          -S .
      shell: cmd

    - name: Build Forex-Calculator (Windows)
      run: cmake --build build --config Release
      shell: cmd

    - name: Package Forex-Calculator (Windows)
      run: |
        mkdir artifacts
        Compress-Archive -Path "build/*" -DestinationPath "artifacts/Forex-Calculator_windows.zip"
      shell: pwsh

    - name: Upload Artifact (Windows)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_windows
        path: artifacts/Forex-Calculator_windows.zip


  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]  # Wait for all builds to complete
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List Downloaded Files
      run: ls -R artifacts

    - name: Generate Tag Name
      id: tag_name
      run: echo "RELEASE_TAG=release-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Forex-Calculator Release
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Artifacts to Release
      run: |
        for file in $(find artifacts -type f); do
          gh release upload ${{ env.RELEASE_TAG }} "$file"
        done
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
