name: Build and Release Static Binaries

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  contents: write  # Required for creating releases and uploading artifacts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [Linux, macOS, Windows]
        include:
          - os: Linux
            artifact_extension: tar.gz
          - os: macOS
            artifact_extension: zip
          - os: Windows
            artifact_extension: zip

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # ---------------------------
    # Linux Section (Static Qt)
    # ---------------------------
    - name: Install Dependencies (Linux)
      if: matrix.os == 'Linux'
      run: |
        sudo apt update
        sudo apt install -y ninja-build build-essential libgl1-mesa-dev libglu1-mesa-dev rsync \
        clang-13 llvm-13 libclang-13-dev cmake

    - name: Build Qt Static (Linux)
      if: matrix.os == 'Linux'
      run: |
        git clone https://code.qt.io/qt/qt5.git
        cd qt5
        git checkout v6.8.1
        ./init-repository
        mkdir build-static
        cd build-static
        ../configure -release -static -prefix ${{ github.workspace }}/qt-static -opensource -confirm-license \
        -nomake examples -nomake tests -skip qtwebengine
        make -j$(nproc)
        make install

    - name: Configure CMake (Linux)
      if: matrix.os == 'Linux'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -DCMAKE_PREFIX_PATH="${{ github.workspace }}/qt-static" \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_WARN_DEPRECATED=OFF \
          -S .

    - name: Build Forex-Calculator (Linux)
      if: matrix.os == 'Linux'
      run: cmake --build build --config Release

    - name: Package Forex-Calculator (Linux)
      if: matrix.os == 'Linux'
      run: |
        mkdir -p artifacts
        tar -czvf artifacts/Forex-Calculator_linux.tar.gz -C build .

    - name: Upload Artifact (Linux)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_linux
        path: artifacts/Forex-Calculator_linux.tar.gz


    # ---------------------------
    # macOS Section (Static Qt)
    # ---------------------------
    - name: Install Dependencies (macOS)
      if: matrix.os == 'macOS'
      run: brew install ninja qt

    - name: Configure CMake (macOS)
      if: matrix.os == 'macOS'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -G "Ninja" \
          -DBUILD_SHARED_LIBS=OFF \
          -DCMAKE_PREFIX_PATH="$(brew --prefix qt)" \
          -DCMAKE_WARN_DEPRECATED=OFF \
          -S .

    - name: Build Forex-Calculator (macOS)
      if: matrix.os == 'macOS'
      run: cmake --build build --config Release

    - name: Package Forex-Calculator (macOS)
      if: matrix.os == 'macOS'
      run: |
        mkdir -p artifacts
        zip -r artifacts/Forex-Calculator_macos.zip build

    - name: Upload Artifact (macOS)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_macos
        path: artifacts/Forex-Calculator_macos.zip


    # ---------------------------
    # Windows Section (Static Qt)
    # ---------------------------
    - name: Install Dependencies (Windows)
      if: matrix.os == 'Windows'
      run: |
        choco install ninja cmake mingw
      shell: cmd

    - name: Install Static Qt (Windows)
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.5.3'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'
        static: true

    - name: Configure CMake (Windows)
      if: matrix.os == 'Windows'
      run: |
        cmake -B build ^
          -DCMAKE_BUILD_TYPE=Release ^
          -G Ninja ^
          -DCMAKE_PREFIX_PATH=D:\a\Forex-Calculator\Qt\6.5.3\mingw_64 ^
          -DBUILD_SHARED_LIBS=OFF ^
          -S .
      shell: cmd

    - name: Build Forex-Calculator (Windows)
      if: matrix.os == 'Windows'
      run: cmake --build build --config Release
      shell: cmd

    - name: Package Forex-Calculator (Windows)
      if: matrix.os == 'Windows'
      run: |
        mkdir artifacts
        Compress-Archive -Path "build/*" -DestinationPath "artifacts/Forex-Calculator_windows.zip"
      shell: pwsh

    - name: Upload Artifact (Windows)
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_windows
        path: artifacts/Forex-Calculator_windows.zip


  # ---------------------------
  # Release Job (After Build)
  # ---------------------------
  release:
    runs-on: Linux
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Generate Tag Name
      id: tag_name
      run: echo "RELEASE_TAG=release-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Forex-Calculator Release
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Artifacts to Release
      run: |
        gh release upload ${{ env.RELEASE_TAG }} artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
