name: Build and Release Forex Calculator

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-14, windows-2022]
        include:
          - os: ubuntu-22.04
            artifact_extension: tar.gz
          - os: macos-14
            artifact_extension: dmg
          - os: windows-2022
            artifact_extension: zip

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    # ---------------------------
    # Ubuntu Section (AppImage)
    # ---------------------------
    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt update
        sudo apt install -y ninja-build cmake libgl1-mesa-dev libglu1-mesa-dev \
          libxkbcommon-dev libxkbcommon-x11-dev libxcb-icccm4 patchelf libfuse2 \
          x11-utils xvfb libxcb-image0 libxcb-util1 libxcb-keysyms1 \
          libxcb-render-util0 libxcb-xinerama0 libx11-xcb-dev
        wget -q https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage
        chmod +x linuxdeployqt-continuous-x86_64.AppImage
        sudo mv linuxdeployqt-continuous-x86_64.AppImage /usr/local/bin/linuxdeployqt

    - name: Create Qt Non-Interactive Script
      if: matrix.os == 'ubuntu-22.04'
      run: |
        cat << EOF > qt-noninteractive.qs
        function Controller() {
          gui.clickButton(buttons.NextButton);
          gui.clickButton(buttons.NextButton);
          gui.clickButton(buttons.NextButton);
          gui.clickButton(buttons.AcceptLicenseButton);
          gui.clickButton(buttons.NextButton);
          gui.clickButton(buttons.NextButton);
          gui.clickButton(buttons.FinishButton);
        }
        EOF

    - name: Install Qt6 (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        QT_VERSION="6.6.0"
        wget https://download.qt.io/official_releases/online_installers/qt-unified-linux-x64-online.run
        chmod +x qt-unified-linux-x64-online.run
        sudo apt install -y x11-xkb-utils
        echo "Running Qt Installer"
        xvfb-run sudo ./qt-unified-linux-x64-online.run --script qt-noninteractive.qs || exit 1
        echo "/opt/Qt/${QT_VERSION}/gcc_64/bin" >> $GITHUB_PATH
        export Qt6_DIR="/opt/Qt/${QT_VERSION}/gcc_64/lib/cmake"

    - name: Configure CMake (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja

    - name: Build Forex-Calculator (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: cmake --build build

    - name: Package AppImage (Ubuntu)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        mkdir -p package
        cp build/Forex-Calculator package/
        linuxdeployqt package/Forex-Calculator -appimage -bundle-non-qt-libs
        mv Forex-Calculator*.AppImage Forex-Calculator.AppImage

    - name: Upload AppImage Artifact
      if: matrix.os == 'ubuntu-22.04'
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_Ubuntu
        path: Forex-Calculator.AppImage

    # ---------------------------
    # macOS Section (DMG)
    # ---------------------------
    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-14'
      run: brew install ninja cmake qt6

    - name: Configure and Build (macOS)
      if: matrix.os == 'macos-14'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja -DQt6_DIR="/usr/local/opt/qt6"
        cmake --build build

    - name: Package DMG (macOS)
      if: matrix.os == 'macos-14'
      run: |
        mkdir -p package
        cp -R build/Forex-Calculator.app package/
        /usr/local/opt/qt6/bin/macdeployqt package/Forex-Calculator.app -dmg
        mv package/*.dmg Forex-Calculator_macos.dmg

    - name: Upload macOS Artifact
      if: matrix.os == 'macos-14'
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_macOS
        path: Forex-Calculator_macos.dmg

    # ---------------------------
    # Windows Section
    # ---------------------------
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-2022'
      run: |
        choco install ninja cmake mingw
      shell: cmd

    - name: Install Qt (Windows)
      if: matrix.os == 'windows-2022'
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.6.0'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_mingw'

    - name: Configure CMake (Windows)
      if: matrix.os == 'windows-2022'
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja
      shell: cmd

    - name: Build Forex-Calculator (Windows)
      if: matrix.os == 'windows-2022'
      run: cmake --build build
      shell: cmd

    - name: Package (Windows)
      if: matrix.os == 'windows-2022'
      run: |
        mkdir package
        copy build\Forex-Calculator.exe package\
        windeployqt.exe package\Forex-Calculator.exe
        Compress-Archive -Path package -DestinationPath Forex-Calculator_windows.zip
      shell: pwsh

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Forex-Calculator_Windows
        path: Forex-Calculator_windows.zip

  # ---------------------------
  # Publish Section
  # ---------------------------
  release:
    runs-on: ubuntu-22.04
    needs: build
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        merge-multiple: true

    - name: Generate Release Tag
      run: echo "RELEASE_TAG=release-$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: Forex-Calculator ${{ env.RELEASE_TAG }}
        draft: false
        prerelease: false
        files: artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
