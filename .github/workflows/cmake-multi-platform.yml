name: Build and Release Forex Calculator

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_extension: AppImage
          - os: macos-latest
            artifact_extension: zip
          - os: windows-latest
            artifact_extension: zip

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Linux Section
      - name: Build Forex-Calculator AppImage (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cat <<EOF > Dockerfile
          FROM ubuntu:22.04
          RUN apt update && apt install -y --no-install-recommends \
              cmake ninja-build build-essential libgl1-mesa-dev libglu1-mesa-dev rsync \
              qt6-base-dev qt6-tools-dev qt6-tools-dev-tools qt6-l10n-tools qt6-declarative-dev \
              qt6-multimedia-dev libpcre3 libpcre3-dev patchelf wget xz-utils fuse python3 python3-pip \
              libgtk-3-dev
          RUN pip3 install appimage-builder
          WORKDIR /workspace
          EOF
          docker build -t appimage-builder .
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace appimage-builder /bin/bash -c "
            cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja &&
            cmake --build build &&
            mkdir -p AppDir/usr/bin &&
            cp build/Forex-Calculator AppDir/usr/bin/ &&
            for lib in \$(ldd AppDir/usr/bin/Forex-Calculator | awk '{print \$3}' | grep -v 'not'); do
              cp -v \"\$lib\" AppDir/usr/bin/ || true
            done &&
            mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps &&
            cp resources/forex-calculator.png AppDir/usr/share/icons/hicolor/256x256/apps/ &&
            mkdir -p AppDir/usr/share/applications &&
            cat <<DESKTOP > AppDir/usr/share/applications/forex.calculator.desktop
            [Desktop Entry]
            Name=Forex Calculator
            Exec=usr/bin/Forex-Calculator
            Icon=forex-calculator
            Type=Application
            Categories=Utility;
            DESKTOP
            ls -R AppDir &&
            cat <<YML > appimage-builder.yml
            version: 1
            AppDir:
              path: AppDir
              app_info:
                id: forex.calculator
                name: Forex Calculator
                version: 1.0.0
                exec: usr/bin/Forex-Calculator
                icon: forex-calculator
              files:
                exclude:
                  - usr/share/doc
                  - usr/share/man
                  - usr/share/icons/hicolor/index.theme
            YML
            appimage-builder --recipe appimage-builder.yml &&
            ls -l &&
            mkdir -p artifacts &&
            mv *.AppImage artifacts/ || { echo 'AppImage not found!'; ls -l; exit 1; }"
      - name: Upload Artifact (Ubuntu)
        uses: actions/upload-artifact@v4
        with:
          name: Forex-Calculator_linux
          path: artifacts/*.AppImage

      # macOS Section
      - name: Install Dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ninja qt cmake

      - name: Configure CMake (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja -S "${{ github.workspace }}"

      - name: Build Forex-Calculator (macOS)
        if: matrix.os == 'macos-latest'
        run: cmake --build build

      - name: Package Forex-Calculator (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p package
          cp -R build/Forex-Calculator.app package/
          macdeployqt package/Forex-Calculator.app -dmg
          mv package/*.dmg Forex-Calculator_macos.dmg

      - name: Upload Artifact (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: Forex-Calculator_macos
          path: Forex-Calculator_macos.dmg

      # Windows Section
      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ninja cmake mingw
        shell: cmd

      - name: Install Qt (Windows)
        if: matrix.os == 'windows-latest'
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.5.3'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release -G Ninja -S "${{ github.workspace }}"
        shell: cmd

      - name: Build Forex-Calculator (Windows)
        if: matrix.os == 'windows-latest'
        run: cmake --build build
        shell: cmd

      - name: Package Forex-Calculator (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir package
          copy build\Forex-Calculator.exe package\
          windeployqt.exe package\Forex-Calculator.exe
          Compress-Archive -Path package -DestinationPath Forex-Calculator_windows.zip
        shell: pwsh

      - name: Upload Artifact (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: Forex-Calculator_windows
          path: Forex-Calculator_windows.zip

  # Publish Section
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List Downloaded Artifacts
        run: ls -R artifacts

      - name: Validate Ubuntu Artifact
        run: |
          if [ ! -f artifacts/Forex-Calculator_linux.AppImage ]; then
            echo "Ubuntu artifact (AppImage) missing!"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Forex-Calculator ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          files: |
            artifacts/Forex-Calculator_linux.AppImage
            artifacts/Forex-Calculator_macos.dmg
            artifacts/Forex-Calculator_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
